/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pcdserver;

import java.io.*;
import java.net.*;
import java.lang.*;

/**
 *
 * @author Usuario
 */
public class Principal extends javax.swing.JFrame {    
    
    private int puerto=0;

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        lb_puerto = new javax.swing.JLabel();
        fi_puerto = new javax.swing.JTextField();
        lb_estado = new javax.swing.JLabel();
        lb_icono_estado = new javax.swing.JLabel();
        bt_escuchar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tx_area_texto = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PCDServer");
        setLocation(new java.awt.Point(0, 0));
        setMaximumSize(new java.awt.Dimension(450, 420));
        setMinimumSize(new java.awt.Dimension(450, 420));
        setPreferredSize(new java.awt.Dimension(450, 420));
        setSize(new java.awt.Dimension(300, 300));

        lb_puerto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lb_puerto.setText("Puerto: ");

        fi_puerto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fi_puerto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fi_puertoActionPerformed(evt);
            }
        });

        lb_estado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lb_estado.setText("Estado:");

        lb_icono_estado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lb_icono_estado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_icono_estado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pcdserver/off.png"))); // NOI18N
        lb_icono_estado.setText("OFF");

        bt_escuchar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_escuchar.setText("ESCUCHAR");
        bt_escuchar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_escucharMouseClicked(evt);
            }
        });
        bt_escuchar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_escucharActionPerformed(evt);
            }
        });

        tx_area_texto.setMaximumSize(new java.awt.Dimension(320, 320));
        tx_area_texto.setMinimumSize(new java.awt.Dimension(320, 320));
        tx_area_texto.setPreferredSize(new java.awt.Dimension(320, 320));
        jScrollPane1.setViewportView(tx_area_texto);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lb_puerto)
                                .addGap(4, 4, 4)
                                .addComponent(fi_puerto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(lb_estado)
                                .addGap(10, 10, 10)
                                .addComponent(lb_icono_estado))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(bt_escuchar)))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(lb_puerto))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(fi_puerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(lb_estado))
                    .addComponent(lb_icono_estado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_escuchar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fi_puertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fi_puertoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fi_puertoActionPerformed

    private void bt_escucharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_escucharActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_escucharActionPerformed

    private void bt_escucharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_escucharMouseClicked
        
        try{
            puerto = Integer.parseInt(fi_puerto.getText());
            if (1024 <= puerto && 65535 >= puerto){
                Escucha escucha = new Escucha(puerto); 
                escucha.start();
            }else{
                throw new NumberFormatException();
            }
        }        
        catch (NumberFormatException e){
            tx_area_texto.setText("Debe introducir un puerto correcto entre el "
                    + "1024 y el 65535");
        }        
    }//GEN-LAST:event_bt_escucharMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    public class Escucha extends Thread{
        private ServerSocket yo;
        private int puerto;
        private Socket cliente;
        private int id = 0;
        
        public Escucha(int puerto){
            this.puerto = puerto;
        }
        
        public void run(){
            try{
                this.yo = new ServerSocket (this.puerto);
                lb_icono_estado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pcdserver/on.png")));
                lb_icono_estado.setText("ON ");
                fi_puerto.setEnabled(false);
                lb_puerto.setEnabled(false);
                bt_escuchar.setEnabled(false);
                while (true) {
                    this.cliente = yo.accept();
                    Conexion conexion = new Conexion(this.cliente);
                    conexion.start(); 
                }
            }catch (IOException e){
                tx_area_texto.setText("Hubo un error al iniciar el servidor: "+ e);
            }
            
        }
    }
   
    public class Conexion extends Thread {
        private Socket cliente = null;
        private int ack = 5;
        private BufferedReader entrada = null;
        private PrintWriter salida = null;

        public Conexion (Socket cliente) {
            this.cliente = cliente;
        }
        
        public void run() {
            try {
                this.salida = new PrintWriter(cliente.getOutputStream(), true);
                this.entrada = new BufferedReader(
                    new InputStreamReader(
                        cliente.getInputStream()));
                
                String mensaje;
                String ip = cliente.getInetAddress().toString();
                
                while ((mensaje = entrada.readLine()) != null) {
                    salida.print(ack);
                    if (entrada.equals(String.valueOf(ack)))
                        break;
                    
                    tx_area_texto.setText(tx_area_texto.getText()+'\n'+
                            ip+ ": " + mensaje);
                }
                entrada.close();
                salida.close();
                cliente.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_escuchar;
    private javax.swing.JTextField fi_puerto;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_estado;
    private javax.swing.JLabel lb_icono_estado;
    private javax.swing.JLabel lb_puerto;
    private javax.swing.JTextPane tx_area_texto;
    // End of variables declaration//GEN-END:variables
}
